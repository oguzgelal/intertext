[{"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/index.tsx":"1","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/reportWebVitals.ts":"2","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/App.tsx":"3","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/web/Renderer.tsx":"4","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Text.tsx":"5","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/themes/dark.ts":"6","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/utils/cssvar.ts":"7","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/values.ts":"8","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/utils/intent.ts":"9","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Button.tsx":"10","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/themes/fire.ts":"11","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/utils/alignment.ts":"12","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Spacer.tsx":"13","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Block.tsx":"14","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/web/Filler.tsx":"15"},{"size":586,"mtime":1609185606531,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1607185770525,"results":"18","hashOfConfig":"17"},{"size":151,"mtime":1609006550174,"results":"19","hashOfConfig":"17"},{"size":5802,"mtime":1609647274348,"results":"20","hashOfConfig":"17"},{"size":4112,"mtime":1609637660789,"results":"21","hashOfConfig":"17"},{"size":374,"mtime":1609281232125,"results":"22","hashOfConfig":"17"},{"size":398,"mtime":1609006580360,"results":"23","hashOfConfig":"17"},{"size":9339,"mtime":1609646938670,"results":"24","hashOfConfig":"17"},{"size":4480,"mtime":1609639113263,"results":"25","hashOfConfig":"17"},{"size":3436,"mtime":1609637660789,"results":"26","hashOfConfig":"17"},{"size":914,"mtime":1609864604225,"results":"27","hashOfConfig":"17"},{"size":523,"mtime":1609637660816,"results":"28","hashOfConfig":"17"},{"size":1090,"mtime":1609436040847,"results":"29","hashOfConfig":"17"},{"size":3699,"mtime":1609639661727,"results":"30","hashOfConfig":"17"},{"size":405,"mtime":1609617351002,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"upfc7x",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/index.tsx",[],["65","66"],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/reportWebVitals.ts",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/App.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/web/Renderer.tsx",["67"],"import React, { useState } from 'react';\nimport styled from '@emotion/styled/macro';\nimport Text from 'components/core/Text';\nimport Button from 'components/core/Button';\nimport Spacer from 'components/core/Layout/Spacer';\nimport Block from 'components/core/Layout/Block';\nimport Filler from 'components/web/Filler';\nimport { Global } from '@emotion/react/macro';\nimport { Intent, Size, Theme } from 'style/values';\nimport darkTheme from 'style/themes/dark';\nimport fireTheme from 'style/themes/fire';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  overflow: hidden;\n  height: 100%;\n`;\n\nconst Contents = styled.div`\n  flex-grow: 1;\n  overflow: auto;\n  min-height: 100%;\n  height: auto;\n  border-left: 1px solid var(--inx-color-border);\n  border-right: 1px solid var(--inx-color-border);\n  padding: 62px 222px;\n`;\n\nconst Side = styled.div`\n  flex-grow: 0;\n  flex-shrink: 0;\n  width: 320px;\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  min-height: 100%;\n  padding: 22px;\n  overflow: auto;\n`;\n\nconst Renderer = () => {\n\n  const [ theme, themeSet ] = useState<Theme>();\n  const [ intent, intentSet ] = useState<Intent>();\n\n  // common parameters to apply to every component instance \n  const params = { intent }\n  const hasDefIntent = !intent || intent === Intent.DEFAULT;\n  const blockParams = {\n    intent: hasDefIntent ? Intent.INFO : intent\n  }\n\n  const blockFiller = <div style={{ width: 20, height: 20 }} />\n\n  return (\n    <Wrapper>\n\n      {/** apply themes */}\n      <Global\n        styles={[\n          theme === Theme.DARK && darkTheme,\n          theme === Theme.FIRE && fireTheme,\n        ].filter(Boolean)}\n      />\n      \n      {/** settings */}\n      <Side>\n        <Text h3>Theme</Text>\n        <Button fill onClick={() => themeSet(undefined)}>base</Button>\n        <Button fill onClick={() => themeSet(Theme.DARK)}>dark</Button>\n        <Button fill onClick={() => themeSet(Theme.FIRE)}>fire</Button>\n        \n        <Spacer size={Size.MEDIUM} />\n        \n        <Text h3>Intent</Text>\n        <Button intent={Intent.DEFAULT} fill onClick={() => intentSet(undefined)}>default</Button>\n        <Button intent={Intent.PRIMARY} fill onClick={() => intentSet(Intent.PRIMARY)}>primary</Button>\n        <Button intent={Intent.SECONDARY} fill onClick={() => intentSet(Intent.SECONDARY)}>secondary</Button>\n        <Button intent={Intent.SUCCESS} fill onClick={() => intentSet(Intent.SUCCESS)}>success</Button>\n        <Button intent={Intent.WARNING} fill onClick={() => intentSet(Intent.WARNING)}>warning</Button>\n        <Button intent={Intent.ERROR} fill onClick={() => intentSet(Intent.ERROR)}>error</Button>\n        <Button intent={Intent.INFO} fill onClick={() => intentSet(Intent.INFO)}>info</Button>\n      </Side>\n\n      {/** render styles here */}\n      <Contents>\n\n        {/** layout */}\n\n        <Text h2 {...params}>Layout</Text>\n        <Text h3 {...params}>Block</Text>\n        <Text p {...params}>\n          Blocks are the basic building block of Intertext, every component is \n          nested inside of a block. {hasDefIntent && <Text muted {...params}>Blocks shown here falls to the \n          <Text b {...params}> Info</Text> intent for demonstration purpose.</Text>}\n        </Text>\n        <Spacer size={Size.SMALL} />\n        <Block {...blockParams}>\n          <Text p {...params} intent={blockParams.intent}>This is some text</Text>\n        </Block>\n\n        <Text h3 {...params}>Nested Blocks</Text>\n        <Text p {...params}>\n          Blocks can contain other blocks, or elements (which are wrapped in \n          blocks of their own)\n        </Text>\n        <Spacer size={Size.SMALL} />\n        <Block {...blockParams}>\n          <Block {...blockParams}>\n            <Block {...blockParams}>{blockFiller}</Block>\n          </Block>\n          <Block {...blockParams}>\n            <Block {...blockParams}>{blockFiller}</Block>\n            <Block {...blockParams}>{blockFiller}</Block>\n          </Block>\n        </Block>\n        \n        <Text h3 {...params}>Block With Pockets</Text>\n        <Text p {...params}>\n          Blocks come with pockets on either side, that can contain other blocks \n          or elements. Pockets should be used for positioning items that are directly \n          related to whatever is in the block, such as action items. On smaller screens, \n          pockets will not wrap and positioned in line with the block.\n        </Text>\n        <Spacer size={Size.SMALL} />\n        <Block {...blockParams} pocketLeft={<Text intent={blockParams.intent}>Left</Text>}>\n          {blockFiller}\n        </Block>\n        <Block {...blockParams} pocketRight={<Text intent={blockParams.intent}>Right</Text>}>\n          {blockFiller}\n        </Block>\n        <Block\n          {...blockParams}\n          pocketLeft={<Text intent={blockParams.intent}>Left</Text>}\n          pocketRight={<Text intent={blockParams.intent}>Right</Text>}\n        >\n          {blockFiller}\n        </Block>\n\n        <Spacer size={Size.MEDIUM} />\n        \n        {/** typography */}\n\n        <Text h2 {...params}>Typography</Text>\n        <Text p {...params}>\n          Lorem ipsum dolor sit amet, <Text muted {...params}>consectetur <Text b u {...params}>adipiscing</Text> elit. Etiam eu \n          fringilla lectus.</Text> Pellentesque <Text b {...params}>suscipit nisi libero, ac rhoncus libero </Text>\n          molestie quis. <Text u {...params}>Sed facilisis eros</Text> lectus, non cursus turpis faucibus ut. \n          Phasellus tristique sapien ut lacus molestie ornare. Curabitur id ultrices mauris.\n        </Text>\n        <Text h1 {...params}>Heading 1</Text>\n        <Text h2 {...params}>Heading 2</Text>\n        <Text h3 {...params}>Heading 3</Text>\n      </Contents>\n    </Wrapper>\n  )\t\n}\n\nexport default Renderer;","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Text.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/themes/dark.ts",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/utils/cssvar.ts",[],["68","69"],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/values.ts",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/utils/intent.ts",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Button.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/themes/fire.ts",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/utils/alignment.ts",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Spacer.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Block.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/web/Filler.tsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":14},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","replacedBy":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'Filler' is defined but never used.","Identifier","unusedVar",["80"],["81"],"no-global-assign","no-unsafe-negation"]