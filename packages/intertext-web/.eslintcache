[{"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/index.tsx":"1","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/reportWebVitals.ts":"2","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/App.tsx":"3","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Text.tsx":"4","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/themes/dark.ts":"5","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/values.ts":"6","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/utils/intent.ts":"7","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Button.tsx":"8","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/themes/fire.ts":"9","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/utils/alignment.ts":"10","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Spacer.tsx":"11","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Block.tsx":"12","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/web/Filler.tsx":"13","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Grid.tsx":"14","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Screen.tsx":"15","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/utils/media.ts":"16","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Stack.tsx":"17","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/index.ts":"18","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/web/Stage.tsx":"19","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/web/engine.ts":"20","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/web/Renderer.tsx":"21"},{"size":599,"mtime":1610844829421,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1607185770525,"results":"24","hashOfConfig":"23"},{"size":141,"mtime":1612030925191,"results":"25","hashOfConfig":"23"},{"size":3359,"mtime":1612064997615,"results":"26","hashOfConfig":"23"},{"size":374,"mtime":1609281232125,"results":"27","hashOfConfig":"28"},{"size":8787,"mtime":1611446931497,"results":"29","hashOfConfig":"23"},{"size":4480,"mtime":1609639113263,"results":"30","hashOfConfig":"23"},{"size":3777,"mtime":1611379528048,"results":"31","hashOfConfig":"23"},{"size":914,"mtime":1609864604225,"results":"32","hashOfConfig":"28"},{"size":523,"mtime":1609637660816,"results":"33","hashOfConfig":"23"},{"size":1029,"mtime":1611378446253,"results":"34","hashOfConfig":"23"},{"size":3422,"mtime":1610844873512,"results":"35","hashOfConfig":"23"},{"size":405,"mtime":1609617351002,"results":"36","hashOfConfig":"28"},{"size":1565,"mtime":1610844873514,"results":"37","hashOfConfig":"23"},{"size":1024,"mtime":1610845021587,"results":"38","hashOfConfig":"23"},{"size":697,"mtime":1610772771582,"results":"39","hashOfConfig":"23"},{"size":2468,"mtime":1610845093473,"results":"40","hashOfConfig":"23"},{"size":2618,"mtime":1610845164107,"results":"41","hashOfConfig":"23"},{"size":1021,"mtime":1611983595230,"results":"42","hashOfConfig":"23"},{"size":68,"mtime":1611983523909,"results":"43","hashOfConfig":"23"},{"size":3119,"mtime":1611983663878,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"11tam2",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"upfc7x",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"47"},"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/index.tsx",[],["94","95"],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/reportWebVitals.ts",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/App.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Text.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/themes/dark.ts",[],["96","97"],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/values.ts",["98"],"import { css } from '@emotion/react/macro';\nimport { transparentize, darken } from 'polished';\n\ntype IntertextStyleNameDef = {\n  name: string,\n  description?: string,\n  value?: string | number\n}\n\n// Create class name\nconst cls = (str: string): IntertextStyleNameDef => ({\n  name: `inx__${str}`,\n});\n\n// Create variable name\nconst vr = (str: string, value: string | number): IntertextStyleNameDef => ({\n  name: `--inx-${str}`,\n  value,\n});\n\n/**\n * Types\n */\nexport enum Intent {\n  DEFAULT = 'default',\n  PRIMARY = 'primary',\n  SECONDARY = 'secondary',\n  SUCCESS = 'success',\n  WARNING = 'warning',\n  ERROR = 'error',\n  INFO = 'info',\n}\nexport enum Theme {\n  DARK = 'dark',\n  FIRE = 'fire',\n}\nexport enum Size {\n  LARGE = 'large',\n  MEDIUM = 'medium',\n  SMALL = 'small',\n  XSMALL = 'xsmall',\n}\nexport enum Alignment {\n  LEFT = 'left',\n  CENTER = 'center',\n  RIGHT = 'right',\n}\n\n/**\n * Class names\n */\nexport const c = {\n\n  /** complementary */\n\n  // intents\n  INTENT_DEFAULT: cls('intent_default'),\n  INTENT_PRIMARY: cls('intent_primary'),\n  INTENT_SECONDARY: cls('intent_secondary'),\n  INTENT_SUCCESS: cls('intent_success'),\n  INTENT_WARNING: cls('intent_warning'),\n  INTENT_ERROR: cls('intent_error'),\n  INTENT_INFO: cls('intent_info'),\n\n  // alignments\n  ALIGN_LEFT: cls('align_left'),\n  ALIGN_CENTER: cls('align_center'),\n  ALIGN_RIGHT: cls('align_right'),\n\n  /** components: layout */\n  \n  // screen\n  SCREEN: cls('screen'),\n\n  // spacer\n  SPACER: cls('spacer'),\n  SPACER_XSMALL: cls('spacer_xsmall'),\n  SPACER_SMALL: cls('spacer_small'),\n  SPACER_MEDIUM: cls('spacer_medium'),\n  SPACER_LARGE: cls('spacer_large'),\n\n  // block\n  BLOCK: cls('block'),\n  BLOCK_GROW: cls('block_grow'),\n  BLOCK_CONTENTS: cls('block_contents'),\n  BLOCK_POCKET: cls('block_pocket'),\n  BLOCK_POCKET_LEFT: cls('block_pocket_left'),\n  BLOCK_POCKET_RIGHT: cls('block_pocket_right'),\n\n  // grid\n  GRID: cls('grid'),\n  GRID_GAP_XSMALL: cls('grid-gap-xsmall'),\n  GRID_GAP_SMALL: cls('grid-gap-small'),\n  GRID_GAP_MEDIUM: cls('grid-gap-medium'),\n  GRID_GAP_LARGE: cls('grid-gap-large'),\n  \n  // stack\n  STACK: cls('stack'),\n  STACK_VERTICAL: cls('stack_vertical'),\n  STACK_HORIZONTAL: cls('stack_horizontal'),\n  STACK_SPACE_XSMALL: cls('stack_space_xsmall'),\n  STACK_SPACE_SMALL: cls('stack_space_small'),\n  STACK_SPACE_MEDIUM: cls('stack_space_medium'),\n  STACK_SPACE_LARGE: cls('stack_space_large'),\n  \n  /** components: other */\n\n  // texts\n  TEXT: cls('text'),\n  TEXT_DEFAULT: cls('text_default'),\n  TEXT_HEADING: cls('text_heading'),\n  TEXT_MUTED: cls('text_muted'),\n  TEXT_BLOCK: cls('text_block'),\n  TEXT_P: cls('text_p'),\n  TEXT_H1: cls('text_h1'),\n  TEXT_H2: cls('text_h2'),\n  TEXT_H3: cls('text_h3'),\n  TEXT_B: cls('text_b'),\n  TEXT_I: cls('text_i'),\n  TEXT_U: cls('text_u'),\n\n  // button\n  BUTTON: cls('button'),\n  BUTTON_FILL: cls('button_fill'),\n  BUTTON_DISABLED: cls('button_disabled'),\n  BUTTON_SMALL: cls('button_small'),\n  BUTTON_MEDIUM: cls('button_medium'),\n  BUTTON_LARGE: cls('button_large'),\n\n}\n\n/**\n * Variable names + base theme values\n */\nexport const v = {\n  \n  /** colors */\n\n  COLOR_PRIMARY: vr('color-primary', '#5465FF'),\n  COLOR_PRIMARY_HOVER: vr('color-primary-hover', darken(0.03, '#5465FF')),\n  COLOR_PRIMARY_MUTED: vr('color-primary-muted', transparentize(0.5, '#5465FF')),\n  COLOR_PRIMARY_BG: vr('color-primary-bg', transparentize(0.85, '#5465FF')),\n  COLOR_PRIMARY_INVERTED: vr('color-primary-inverted', '#fff'),\n  \n  COLOR_SECONDARY: vr('color-secondary', '#9798FF'),\n  COLOR_SECONDARY_HOVER: vr('color-secondary-hover', darken(0.03, '#9798FF')),\n  COLOR_SECONDARY_MUTED: vr('color-secondary-muted', transparentize(0.5, '#9798FF')),\n  COLOR_SECONDARY_BG: vr('color-secondary-bg', transparentize(0.85, '#9798FF')),\n  COLOR_SECONDARY_INVERTED: vr('color-secondary-inverted', '#fff'),\n  \n  COLOR_ERROR: vr('color-error', '#FF5A65'),\n  COLOR_ERROR_HOVER: vr('color-error-hover', darken(0.03, '#FF5A65')),\n  COLOR_ERROR_MUTED: vr('color-error-muted', transparentize(0.5, '#FF5A65')),\n  COLOR_ERROR_BG: vr('color-error-bg', transparentize(0.85, '#FF5A65')),\n  COLOR_ERROR_INVERTED: vr('color-error-inverted', '#fff'),\n  \n  COLOR_WARNING: vr('color-warning', '#FFAD0A'),\n  COLOR_WARNING_HOVER: vr('color-warning-hover', darken(0.03, '#FFAD0A')),\n  COLOR_WARNING_MUTED: vr('color-warning-muted', transparentize(0.5, '#FFAD0A')),\n  COLOR_WARNING_BG: vr('color-warning-bg', transparentize(0.85, '#FFAD0A')),\n  COLOR_WARNING_INVERTED: vr('color-warning-inverted', '#fff'),\n  \n  COLOR_SUCCESS: vr('color-success', '#17C27D'),\n  COLOR_SUCCESS_HOVER: vr('color-success-hover', darken(0.03, '#17C27D')),\n  COLOR_SUCCESS_MUTED: vr('color-success-muted', transparentize(0.5, '#17C27D')),\n  COLOR_SUCCESS_BG: vr('color-success-bg', transparentize(0.85, '#17C27D')),\n  COLOR_SUCCESS_INVERTED: vr('color-success-inverted', '#fff'),\n  \n  COLOR_INFO: vr('color-info', '#00AAFF'),\n  COLOR_INFO_HOVER: vr('color-info-hover', darken(0.03, '#00AAFF')),\n  COLOR_INFO_MUTED: vr('color-info-muted', transparentize(0.5, '#00AAFF')),\n  COLOR_INFO_BG: vr('color-info-bg', transparentize(0.85, '#00AAFF')),\n  COLOR_INFO_INVERTED: vr('color-info-inverted', '#fff'),\n\n  /** colors functional */\n  \n  COLOR_TEXT: vr('color-text', '#212529'),\n  COLOR_TEXT_MUTED: vr('color-text-muted', transparentize(0.5, '#212529')),\n  COLOR_BACKGROUND: vr('color-background', '#fff'),\n  COLOR_BACKGROUND_PAPER: vr('color-background-paper', '#f8f9fa'),\n  COLOR_BORDER: vr('color-border', '#e9ecef'),\n  COLOR_BUTTON: vr('color-button', '#F3F5F7'),\n  COLOR_BUTTON_HOVER: vr('color-button-hover', darken(0.03, '#F3F5F7')),\n  COLOR_BUTTON_MUTED: vr('color-button-muted', transparentize(0.5, '#F3F5F7')),\n\n  /** font family */\n\n  FONT_FAMILY: vr('font-family', `-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji`),\n  FONT_FAMILY_MONO: vr('font-family-mono', `SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace`),\n\n  /** font weights */\n  \n  FONT_WEIGHT_DEFAULT: vr('font-weight-default', 400),\n  FONT_WEIGHT_BOLD: vr('font-weight-bold', 700),\n  FONT_WEIGHT_H1: vr('font-weight-h1', 700),\n  FONT_WEIGHT_H2: vr('font-weight-h2', 700),\n  FONT_WEIGHT_H3: vr('font-weight-h3', 700),\n\n  /** font sizes */\n\n  // all sizes are relative, uses `rem` units and are calculated against\n  // the root value. to change the scale of everything, use `font-size-root`\n  FONT_SIZE_ROOT: vr('font-size-root', '16px'),\n  FONT_SIZE_DEFAULT: vr('font-size-default', '1rem'),\n  FONT_SIZE_TEXT_H1: vr('font-size-text-h1', '2.8rem'),\n  FONT_SIZE_TEXT_H2: vr('font-size-text-h2', '2rem'),\n  FONT_SIZE_TEXT_H3: vr('font-size-text-h3', '1.2rem'),\n  FONT_SIZE_TEXT_SECONDARY: vr('font-size-text-secondary', '0.7rem'),\n\n  /** line heights */\n  \n  LINE_HEIGHT_DEFAULT: vr('line-height-default', '1.4'),\n  LINE_HEIGHT_H1: vr('line-height-h1', '1.4'),\n  LINE_HEIGHT_H2: vr('line-height-h2', '1.4'),\n  LINE_HEIGHT_H3: vr('line-height-h3', '1.4'),\n\n  /** borders */\n\n  BORDER_RADIUS: vr('border-radius', '0.2rem'),\n  BORDER_FOCUS_SIZE: vr('border-focus-size', '0.15rem'),\n  BORDER_FOCUS_STYLE: vr('border-focus-style', 'solid'),\n  BORDER_BLOCK_SIZE: vr('border-block-size', '0.15rem'),\n  BORDER_BLOCK_STYLE: vr('border-block-style', 'solid'),\n\n  /** spacing */\n  \n  SPACING_SPACER_XSMALL: vr('spacing-spacer-xsmall', '0.4rem'),\n  SPACING_SPACER_SMALL: vr('spacing-spacer-small', '0.6rem'),\n  SPACING_SPACER_MEDIUM: vr('spacing-spacer-medium', '1.2rem'),\n  SPACING_SPACER_LARGE: vr('spacing-spacer-large', '1.6rem'),\n  \n  SPACING_TEXT_DEFAULT: vr('spacing-text-default', '0'),\n  SPACING_TEXT_H1: vr('spacing-text-h1', '2rem'),\n  SPACING_TEXT_H2: vr('spacing-text-h2', '1.8rem'),\n  SPACING_TEXT_H3: vr('spacing-text-h3', '1.4rem'),\n  SPACING_TEXT_P: vr('spacing-text-p', '0.8rem'),\n\n  SPACING_BUTTON_HEIGHT_SMALL: vr('spacing-button-height-small', '1.2rem'),\n  SPACING_BUTTON_HEIGHT_MEDIUM: vr('spacing-button-height-medium', '2.2rem'),\n  SPACING_BUTTON_HEIGHT_LARGE: vr('spacing-button-height-large', '3.2rem'),\n  SPACING_BUTTON_PADDING_SMALL: vr('spacing-button-padding-small', '0.5rem'),\n  SPACING_BUTTON_PADDING_MEDIUM: vr('spacing-button-padding-medium', '1rem'),\n  SPACING_BUTTON_PADDING_LARGE: vr('spacing-button-padding-large', '1.8rem'),\n\n  SPACING_BLOCK_PADDING: vr('spacing-block-padding', '0.4rem'),\n  SPACING_SCREEN_PADDING_TB_LARGE: vr('spacing-screen-padding-tb-large', '62px'),\n  SPACING_SCREEN_PADDING_LR_LARGE: vr('spacing-screen-padding-lr-large', '222px'),\n  SPACING_SCREEN_PADDING_TB_MEDIUM: vr('spacing-screen-padding-tb-medium', '42px'),\n  SPACING_SCREEN_PADDING_LR_MEDIUM: vr('spacing-screen-padding-lr-medium', '102px'),\n  SPACING_SCREEN_PADDING_TB_SMALL: vr('spacing-screen-padding-tb-small', '12px'),\n  SPACING_SCREEN_PADDING_LR_SMALL: vr('spacing-screen-padding-lr-small', '12px'),\n\n}\n","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/utils/intent.ts",[],["99","100"],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Button.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/themes/fire.ts",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/utils/alignment.ts",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Spacer.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Block.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/web/Filler.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Grid.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Screen.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/utils/media.ts",["101"],"import { css, SerializedStyles } from '@emotion/react/macro';\nimport { v } from '../values';\n\ntype Breakpoints = (\n  'small' |\n  'medium' |\n  'large'\n)\n\nexport const media = (\n  bp: Breakpoints | Breakpoints[],\n  styles: SerializedStyles\n): SerializedStyles => {\n\n  const bpArr: Breakpoints[] = Array.isArray(bp)\n    ? bp\n    : [bp];\n  \n  return css`\n    ${bpArr.includes('large') && css`\n      @media (max-width: 1312px) {\n        ${styles}\n      }\n    `}\n    ${bpArr.includes('medium') && css`\n      @media (max-width: 992px) {\n        ${styles}\n      }\n    `}\n    ${bpArr.includes('small') && css`\n      @media (max-width: 688px) {\n        ${styles}\n      }\n    `}\n  `;\n}\n\nexport default media;","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/core/Layout/Stack.tsx",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/style/index.ts",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/web/Stage.tsx",["102"],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport demo from '@intertext/utils/src/examples/demo.json'\nimport demoXml from '@intertext/utils/src/examples/demo.xml'\n\nimport engine from './engine';\nimport Renderer from 'components/web/Renderer';\nimport Screen from 'components/core/Layout/Screen';\nimport { Branch } from '@intertext/engine';\n\n\nconsole.log('demo', demo)\nconsole.log('demoXml', demoXml)\n// engine.insert(demo as Branch[])\nwindow.engine = engine\n\ndeclare global {\n  interface Window { engine: any; }\n}\n\nconst Stage = () => {\n\n  const [packages, packagesSet] = useState<Branch[]>([])\n\n  useEffect(() => {\n    fetch(demoXml)\n      .then(response => response.text())\n      .then(engine.parseXml)\n      .then(packagesSet);\n  }, [])\n\n  return (\n    <Screen>\n      {\n        packages.map((branch, i) => (\n          <Renderer\n            key={i}\n            branch={branch}\n          />\n        ))\n      }\n    </Screen>\n  )\n}\n\nStage.propTypes = {\n}\n\nexport default Stage;","/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/web/engine.ts",[],"/Users/oguzgelal/Workspace/intertext/packages/intertext-web/src/components/web/Renderer.tsx",["103"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Text from 'components/core/Text';\nimport Block from 'components/core/Layout/Block';\nimport Button from 'components/core/Button';\nimport Spacer from 'components/core/Layout/Spacer';\nimport Grid from 'components/core/Layout/Grid';\nimport Stack from 'components/core/Layout/Stack';\nimport { Renderable } from '@intertext/engine';\n\n\nconst renderChildren = (data: Renderable) => {\n  if (Array.isArray(data)) {\n    return data.map((c, i) => (\n      <Renderer key={i} branch={c} />\n    ))\n  }\n\n  return <Renderer branch={data} />\n}\n\nconst Renderer = ({\n  branch\n}: {\n  branch: Renderable\n}) => {\n\n  /**\n   * List of items\n   */\n  if (Array.isArray(branch)) {\n    return <>{renderChildren(branch)}</>\n  }\n\n  /**\n   * Nil\n   */\n  if (!branch) {\n    return null;\n  }\n\n  /**\n   * Direct values\n   */\n  if (\n    typeof branch === \"string\" ||\n    typeof branch === \"number\"\n  ) {\n    return <Text>{branch}</Text>\n  }\n  \n  /**\n   * Block\n   */\n  if ('block' in branch) {\n    return (\n      <Block \n        align={branch.align}\n        intent={branch.intent}\n        grow={branch.grow}\n        pocketLeft={('pocketLeft' in branch) && renderChildren(branch.pocketLeft)}\n        pocketRight={('pocketRight' in branch) && renderChildren(branch.pocketRight)}\n      >\n        {renderChildren(branch['block'])}\n      </Block>\n    )\n  }\n\n  /**\n   * Stack\n   */\n  if ('stack' in branch) {\n    return (\n      <Stack\n        size={branch.size}\n        vertical={branch.vertical}\n      >\n        {renderChildren(branch['stack'])}\n      </Stack>\n    )\n  }\n\n  /**\n   * Spacer\n   */\n  if ('spacer' in branch) {\n    return (\n      <Spacer size={branch.size} />\n    )\n  }\n\n  /**\n   * Grid\n   */\n  if ('grid' in branch) {\n    return (\n      <Grid\n        cols={branch.cols}\n        gap={branch.gap}\n      >\n        {renderChildren(branch['grid'])}\n      </Grid>\n    )\n  }\n\n  /**\n   * Text\n   */\n  if (\n    'text' in branch ||\n    'p' in branch ||\n    'h1' in branch ||\n    'h2' in branch ||\n    'h3' in branch\n  ) {\n\n    let child = null;\n    if ('text' in branch) child = branch['text']\n    if ('p' in branch) child = branch['p']\n    if ('h1' in branch) child = branch['h1']\n    if ('h2' in branch) child = branch['h2']\n    if ('h3' in branch) child = branch['h3']\n\n    const directRender = (\n      typeof child === \"string\" ||\n      typeof child === \"number\"\n    )\n\n    return (\n      <Text\n        p={'p' in branch}\n        h1={'h1' in branch}\n        h2={'h2' in branch}\n        h3={'h3' in branch}\n        b={branch.bold}\n        u={branch.underlined}\n        i={branch.italic}\n        muted={branch.muted}\n        intent={branch.intent}\n      >\n        {directRender ? child : renderChildren(child)}\n      </Text>\n    )\n  }\n\n  /**\n   * Button\n   */\n  if ('button' in branch) {\n    return (\n      <Button\n        size={branch.size}\n        align={branch.align}\n        intent={branch.intent}\n        fill={branch.fill}\n        disabled={branch.disabled}\n      >\n        {renderChildren(branch['button'])}\n      </Button>\n    )\n  }\n  \n  return null\n}\n\nexport default Renderer;",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"104","replacedBy":"108"},{"ruleId":"106","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":13},{"ruleId":"104","replacedBy":"114"},{"ruleId":"106","replacedBy":"115"},{"ruleId":"110","severity":1,"message":"116","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":11},{"ruleId":"110","severity":1,"message":"117","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":17},{"ruleId":"110","severity":1,"message":"117","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":17},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],["118"],["119"],"@typescript-eslint/no-unused-vars","'css' is defined but never used.","Identifier","unusedVar",["118"],["119"],"'v' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]